#include <unistd.h>
#include <stdlib.h>
#include "./movement.h"

#define OFFSET 1

void do_character_backward_move(character_t *c);
void do_character_forward_move(character_t *c);
void do_character_left_move(character_t *c);
void do_character_right_move(character_t *c);

uint8_t character_move(character_t *c, const direction_e d) {
	switch (d)
	{
		case E_BACKWARD:
			do_character_backward_move(c);
			return 0;
		case E_FORWARD:
			do_character_forward_move(c);
			return 0;
		case E_LEFT:
			do_character_left_move(c);
			return 0;
		case E_RIGHT:
			do_character_right_move(c);
			return 0;
		default:
			return EXIT_FAILURE;
	}
}

void do_character_backward_move(character_t *c) {
	c->coord[0] -= OFFSET;
	write(1, "id : [", 6);
	write(1, c->id, 36);
	write(1, "] moves backward.\n", 18);
}

void do_character_forward_move(character_t *c) {
	c->coord[0] += OFFSET;
	write(1, "id : [", 6);
	write(1, c->id, 36);
	write(1, "] moves forward.\n", 17);
}

void do_character_left_move(character_t *c) {
	c->coord[1] -= OFFSET;
	write(1, "id : [", 6);
	write(1, c->id, 36);
	write(1, "] moves left.\n", 14);
}

void do_character_right_move(character_t *c) {
	c->coord[1] += OFFSET;
	write(1, "id : [", 6);
	write(1, c->id, 36);
	write(1, "] moves right.\n", 15);
}
