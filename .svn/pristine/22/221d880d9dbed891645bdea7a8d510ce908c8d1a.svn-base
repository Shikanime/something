#include <assert.h>
#include "./inventory_test.h"
#include "./inventory_mock.h"
#include "./inventory.h"
#include <stdio.h>
#include "./helper.h"

void add_element(inventory_t *i);
void remove_element(inventory_t *i);

void describe_inventory() {
	inventory_should((uint8_t *) "Inventory should add element", add_element);
	inventory_should((uint8_t *) "Inventory should remove element", remove_element);
}

void			add_element(inventory_t *i) {
	item_t	*gun = NULL;
	item_t	*door = NULL;

	gun = new_item(123, 0, 0, E_GUN);
	add_to_inventory(i, gun);

	assert(i->size == 1);
	assert(i->first != NULL);
	assert(i->first->item->id == 123);
	assert(i->first->item->type == E_GUN);

	door = new_item(654, 0, 0, E_DOOR);
	add_to_inventory(i, door);
	assert(i->size == 2);
	assert(i->last != NULL);
	assert(i->last->item->id == 654);
	assert(i->last->item->type == E_DOOR);
	print_inventory(i);
}

void remove_element(inventory_t *i) {
	item_t	*gun = NULL;
	item_t	*door = NULL;
	item_t	*key = NULL;
	item_t	*kniffe = NULL;

	print_string((uint8_t *) "Inventory should remove element");
	gun = new_item(864, 0, 0, E_GUN);
	door = new_item(735, 0, 0, E_DOOR);
	key = new_item(25, 0, 0, E_KEY);
	kniffe = new_item(987, 0, 0, E_KNIFE);
	add_to_inventory(i, door);
	add_to_inventory(i, gun);
	add_to_inventory(i, key);
	add_to_inventory(i, kniffe);
	remove_from_inventory(i, 25);
	print_inventory(i);
}
