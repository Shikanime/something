#include <stdlib.h>
#include "./character.h"
#include "./helper.h"

inline character_t *make_character(const uint64_t id, const int32_t x, const int32_t y, const character_type_e t) {
	character_t *c = NULL;

	c = (character_t *)calloc(1, sizeof(character_t));
	c->id = id;
	c->coord[CHARACTER_X_AXIS] = x;
	c->coord[CHARACTER_Y_AXIS] = y;
	c->type = t;
	return c;
}

inline void free_character(character_t *c) {
	free(c);
}

void print_character_uuid(character_t *c) {
	uint64_t b = 0;
	uint64_t n = 0;

	n = c->id;
	if (n == (uint64_t) -2147483648) {
		print_string((uint8_t *) "-2147483648", 11);
	} else {
		if (n < 0) {
			print_character('-');
			n *= (uint64_t) -1;
		}
		if (n < 10) {
			print_character((uint8_t) (n + 48));
		} else {
			b = 1;
			while (b <= (n / 10)) {
				b *= 10;
			}
			while (b >= 1) {
				print_character((uint8_t) (n / b + '0'));
				n %= b;
				b /= 10;
			}
		}
	}
}
